plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'com.google.android.gms.strict-version-matcher-plugin'
    id 'com.getkeepsafe.dexcount'
    id 'com.github.ben-manes.versions'
    id 'smartdengg.clickdebounce'
    id 'com.google.firebase.crashlytics'
    id 'com.github.konifar.gradle.unused-resources-remover'
    id 'com.gladed.androidgitversion'
    id 'io.gitlab.arturbosch.detekt'
    //id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    ndkVersion '21.4.7075529'

    defaultConfig {
        applicationId 'io.github.getsixtyfour.openpyn'
        minSdkVersion 21
        targetSdkVersion 30
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        resConfigs 'en'
    }

    buildTypes {
        release {
            ndk {
                abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            }
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules-release.pro'
        }
        debug {
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
        dataBinding false
        aidl true
        renderScript true
        resValues true
        shaders false
    }

    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }

    sourceSets {
        debug.java.srcDirs += 'src/debug/kotlin'
        main.java.srcDirs += 'src/main/kotlin'
    }

    aaptOptions {
        noCompress 'mbtiles'
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        // check 'Registered', 'VectorPath', 'DuplicateStrings', 'UnknownNullness', 'UnusedResources', 'UnusedIds'
        abortOnError false
        // baseline file('lint-baseline.xml')
        checkAllWarnings true
        disable 'GoogleAppIndexingWarning', 'VectorPath'
        // lintConfig file('lint.xml')
        xmlReport false
    }

    testOptions {
        animationsDisabled true
    }
}

androidGitVersion {
    format '%describe%%-branch%%-dirty%'
}

debounce {
    loggable = true
    exclusion = [
            'androidx/preference/Preference$1': ['onClick(Landroid/view/View;)V'],
            'com/abdeveloper/library/MultiSelectViewHolder': ['onClick(Landroid/view/View;)V'],
            'com/google/android/gms/common/SignInButton': ['onClick(Landroid/view/View;)V'],
            'com/google/android/gms/dynamic/zae': ['onClick(Landroid/view/View;)V'],
            'io/github/getsixtyfour/openpyn/MainActivity': ['onClick(Landroid/view/View;)V'],
            'io/github/getsixtyfour/openpyn/map/MapViews$OnFavoriteClickListener': ['onClick(Landroid/view/View;)V']
    ]
}

detekt {
    toolVersion = '1.5.1'
    input = files('src/main/kotlin')
    baseline = file('detekt-baseline.xml')
    config = files("$rootDir/config/detekt/detekt.yml")
    reports {
        xml {
            enabled = false
            destination = file("$buildDir/reports/detekt/detekt.xml")
        }
        html {
            enabled = true
            destination = file("$buildDir/reports/detekt/detekt.html")
        }
    }
}

dexcount {
    enabled = false
}

configurations {
    implementation {
        exclude group: 'org.jetbrains.kotlinx', module: 'atomicfu'
        exclude group: 'org.json', module: 'json'
    }

    /*debugAndroidTestCompileClasspath {
        exclude group: 'androidx.annotation'
        exclude group: 'androidx.appcompat'
        exclude group: 'androidx.collection'
        exclude group: 'androidx.core'
        exclude group: 'androidx.fragment'
        exclude group: 'androidx.lifecycle'
        exclude group: 'androidx.recyclerview'
        exclude group: 'androidx.savedstate'
        exclude group: 'androidx.transition'
        exclude group: 'com.google.firebase', module: 'firebase-common'

        resolutionStrategy {
            failOnVersionConflict()
        }
    }*/
}

afterEvaluate {
    // Android Gradle Plugin 4.1.0 breaks build config field injecting in variants dynamically
    // https://issuetracker.google.com/issues/171898346
    /*generateDebugResValues.dependsOn(appGenerateApiBuildConstants)
    generateDebugBuildConfig.dependsOn(appGenerateGitBuildConstants)
    generateReleaseResValues.dependsOn(appGenerateApiBuildConstants)
    generateReleaseBuildConfig.dependsOn(appGenerateGitBuildConstants)*/

    assembleRelease.dependsOn appCheckIfDirty, appCheckIfSame, appCheckIfTagged
}

dependencies {
    // Java 8+ libraries
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

    // Modules
    implementation project(':multi-select-dialog')
    implementation project(':openvpn-service')
    implementation project(':sqlite-ndk')
    implementation project(':vpn-country-flags')

    // 1951FDG
    implementation 'com.github.1951FDG:ProgressToolbar:1.0.9'
    implementation 'com.github.1951FDG:juicessh-pluginlibrary:1.0.17'
    //noinspection GradleDependency
    debugImplementation 'com.github.1951FDG.AndroidPerformanceMonitor:blockcanary-android:slave-SNAPSHOT'

    // Android
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation 'androidx.activity:activity:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.core:core-ktx:1.5.0-beta02'
    implementation 'androidx.cursoradapter:cursoradapter:1.0.0'
    implementation 'androidx.customview:customview:1.1.0'
    implementation 'androidx.fragment:fragment:1.3.0'
    implementation 'androidx.interpolator:interpolator:1.0.0'
    implementation 'androidx.loader:loader:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-beta02'

    //Android Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Architecture
    implementation('com.naver.android.svc:svc:1.0.1') {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-extensions'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }
    //kapt 'com.naver.android.svc:svc-compiler:1.0.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'

    // Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'

    // Error Prone
    //debugAnnotationProcessor 'com.uber.nullaway:nullaway:0.8.0'
    //debugCompileOnly 'com.jakewharton.nopen:nopen-annotations:1.0.1'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.play:core:1.10.0'

    // Google Material Design
    implementation 'com.google.android.material:material:1.3.0'

    // HTTP Client
    implementation('io.ktor:ktor-client-android:1.3.2') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-common'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-core'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-core-common'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    // JSON
    implementation 'com.squareup.moshi:moshi:1.11.0'
    debugImplementation('com.jayrave:moshi-pristine-models:1.0.0') {
        transitive = false
    }

    // Kotlin
    implementation('org.jetbrains.kotlin:kotlin-stdlib') {
        version {
            strictly "$kotlin_version"
        }
    }
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8') {
        version {
            strictly "$kotlin_version"
        }
    }

    // LeakCanary
    implementation 'com.squareup.leakcanary:plumber-android:2.6'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    // Lint
    debugImplementation 'com.vanniktech:lint-rules-android:0.13.0'

    // Logger
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'io.github.microutils:kotlin-logging:1.11.5'
    debugImplementation 'at.favre.lib:slf4j-timber:1.0.1'
    debugImplementation ('com.github.AppDevNext.Logcat:LogcatCore:2.1.1') {
        exclude group: 'com.google.android.material'
        exclude group: 'com.jakewharton.timber'
    }

    // Preference
    implementation('net.mm2d:preference:0.2.5') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }

    // Stetho
    debugImplementation ('com.facebook.stetho:stetho-timber:1.5.1') {
        exclude group: 'com.jakewharton.timber'
    }

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    androidTestImplementation('com.schibsted.spain:barista:3.8.0') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }
    // screengrab:2.0.0 is broken
    androidTestImplementation('tools.fastlane:screengrab:1.2.0') {
        exclude group: 'androidx.test'
        exclude group: 'androidx.test.espresso'
        exclude group: 'com.android.support.test.uiautomator'
    }
}

apply from: 'other.gradle'
apply from: 'inject.gradle'
