apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
//apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'com.google.android.gms.strict-version-matcher-plugin'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.konifar.gradle.unused-resources-remover'

androidGitVersion {
    format = "%tag%%-count%%-commit%%-branch%%-dirty%"
}

detekt {
    toolVersion = "1.0.0-RC16"
    input = files("src/main/java")
    config = files("$rootDir/default-detekt-config.yml")
    filters = ".*/resources/.*,.*/build/.*"
    reports {
        xml {
            enabled = false
            destination = file("$buildDir/reports/detekt/detekt.xml")
        }
        html {
            enabled = true
            destination = file("$buildDir/reports/detekt/detekt.html")
        }
    }
}

dexcount {
    enabled = false
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.isFile()) {
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    android.signingConfigs.create("release", {
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
        storeFile file(keystoreProperties['storeFile'])
        storePassword keystoreProperties['storePassword']
    })
    android.buildTypes["release"].signingConfig = android.signingConfigs["release"]
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.github.getsixtyfour.openpyn"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/kotlinx-coroutines-core.kotlin_module'
        exclude 'META-INF/kotlinx-coroutines-io.kotlin_module'
        exclude 'META-INF/kotlinx-io.kotlin_module'
        exclude 'lib/arm64-v8a/libsqliteX.so'
        exclude 'lib/armeabi-v7a/libsqliteX.so'
        exclude 'lib/x86/libsqliteX.so'
        exclude 'lib/x86_64/libsqliteX.so'
        exclude 'lib/arm64-v8a/libsqlite4java-android.so'
        exclude 'lib/armeabi-v7a/libsqlite4java-android.so'
        exclude 'lib/x86/libsqlite4java-android.so'
        exclude 'lib/x86_64/libsqlite4java-android.so'
    }
    buildTypes {
        release {
            ndk {
                abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Comment next two lines to run "fastlane beta"
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            ndk {
                abiFilters 'arm64-v8a', 'x86_64'
            }
        }
    }
    aaptOptions {
        noCompress 'mbtiles'
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.10.2"
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        // check 'Registered', 'VectorPath', 'DuplicateStrings', 'UnknownNullness', 'UnusedResources', 'UnusedIds'
        disable 'GoogleAppIndexingWarning'
        checkAllWarnings true
        xmlReport false
        abortOnError false
        baseline file("lint-baseline.xml")
        lintConfig file("lint.xml")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        animationsDisabled = true
    }
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        preferProjectModules()
    }
}

configurations {
    compile.exclude group: 'org.jetbrains.kotlinx', module: 'atomicfu-common'
    compile.exclude group: 'org.jetbrains.kotlinx', module: 'atomicfu'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'src/main/libs')
    // Android
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.preference:preference:1.1.0-rc01'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'net.mm2d:preference:0.2.0'
    // Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    //implementation "org.jetbrains.anko:anko-sdk21-listeners:$anko_version"
    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk21:$anko_version"
    // Coroutines
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-io-jvm:$kotlinx_io_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
    // Emoji
    implementation('com.vdurmont:emoji-java:5.1.0') {
        exclude group: 'org.json', module: 'json'
    }
    // Geocoder
    implementation 'de.westnordost:countryboundaries:1.5'
    // JSON
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.jayrave:moshi-pristine-models:1.0.0'
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Logger
    implementation 'io.github.jupf.staticlog:staticlog:2.2.0'
    implementation "org.slf4j:slf4j-api:$slf4j_version"
    debugImplementation "org.slf4j:slf4j-android:$slf4j_version"
    testImplementation "org.slf4j:slf4j-simple:$slf4j_version"
    // Google Play Services
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    // Google Maps SDK for Android v.3.0.0 BETA
    //implementation name:'maps-sdk-3.0.0-beta', ext:'aar'
    //implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    // Networking
    implementation 'com.github.1951FDG:juicessh-pluginlibrary:1.0.15'
    implementation "com.github.kittinunf.fuel:fuel-android:$fuel_version"
    implementation("com.github.kittinunf.fuel:fuel-json:$fuel_version") {
        exclude group: 'org.json', module: 'json'
    }
    implementation("io.ktor:ktor-client-android:$ktor_version") {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-io'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-io-jvm'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-io'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-core'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-io-jvm'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-core-common'
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-jdk8'
    }
    // UI
    implementation('com.afollestad.material-dialogs:core:0.9.6.0') {
        exclude group: 'me.zhanghai.android.materialprogressbar'
    }
    implementation('com.github.1951FDG:Android-Multi-Select-Dialog:v3.3')
    implementation('com.github.1951FDG:ProgressToolbar:1.0.6') {
        exclude group: 'me.zhanghai.android.materialprogressbar'
    }
    implementation 'com.github.AdityaAnand1:Morphing-Material-Dialogs:0.0.4'
    implementation 'com.github.mayuroks:minibar:0.2.0'
    // https://github.com/tingyik90/snackprogressbar/issues/23
    //implementation 'com.github.tingyik90:snackprogressbar:6.1'
    implementation 'com.github.tingyik90:snackprogressbar:6.1.1'
//    implementation('com.github.armcha:ElasticView:0.2.0') {
//        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
//    }
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'
    implementation 'com.github.GrenderG:Toasty:1.4.2'
    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-core:17.2.0'
    // Debug
    debugImplementation 'com.github.1951FDG.AndroidPerformanceMonitor:blockcanary-android:slave-SNAPSHOT'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation('com.schibsted.spain:barista:3.2.0') {
        exclude group: 'androidx.test.espresso'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }
    androidTestImplementation('tools.fastlane:screengrab:1.2.0') {
        exclude group: 'androidx.test'
        exclude group: 'androidx.test.espresso'
        exclude group: 'com.android.support.test.uiautomator'
    }
    // Architecture
    implementation 'com.naver.android.svc:svc:1.0.0'
    kapt 'com.naver.android.svc:svc-compiler:1.0.0'
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // GDPR
    implementation 'com.github.MFlisar:GDPRDialog:1.4.1'
    // KTX
    implementation 'androidx.core:core-ktx:1.1.0'

    implementation 'commons-cli:commons-cli:1.4'
    implementation 'androidx.sqlite:sqlite:2.0.1'
}
