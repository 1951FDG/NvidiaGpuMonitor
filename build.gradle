// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.anko_version = '0.10.8'
    ext.fuel_version = '2.2.1'
    ext.kotlin_version = '1.3.50'
    ext.kotlinx_io_version = '0.1.14'
    ext.ktor_version = '1.2.3'
    ext.nav_version = '2.2.0-alpha02'
    ext.slf4j_version = '1.7.28'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.31.0'
        //classpath 'com.google.gms:google-services:4.2.0'
        classpath 'com.google.android.gms:oss-licenses-plugin:0.9.5'
        classpath 'com.netflix.nebula:gradle-lint-plugin:14.0.1'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'
        classpath 'com.google.android.gms:strict-version-matcher-plugin:1.2.0'
        classpath 'gradle.plugin.com.github.konifar.gradle:plugin:0.3.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.0.0-RC16")
    id("com.gladed.androidgitversion").version("0.4.9")
}

allprojects {
    apply plugin: 'nebula.lint'
    gradleLint {
        alwaysRun = false
        autoLintAfterFailure = false
        criticalRules = ['unused-dependency']
        rules = ['archaic-wrapper', 'unused-dependency', 'duplicate-dependency-class', 'minimum-dependency-version', 'overridden-dependency-version', 'unused-exclude-by-dep']
    }
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        flatDir {
            dirs 'libs'
        }
    }

    apply plugin: 'idea'

    idea.module {
        excludeDirs += file("app/src/main/java/org/sqlite")
        excludeDirs += file("app/src/main/java/io/requery")
        excludeDirs += file("app/src/main/java/com/almworks")
        excludeDirs += file("app/src/main/java/org/javolution")
        excludeDirs += file("app/src/main/jni/sqlite")
        excludeDirs += file("app/src/main/jni/sqlite-android")
        excludeDirs += file("app/src/main/jni/sqlite4java")
        excludeDirs += file("app/src/main/obj")
        excludeDirs += file("svg")
        excludeDirs += file("tiles")
        excludeDirs += file("world")
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task unzip(type: Copy) {
    from zipTree("${project.rootDir}/sqlite-android-3240000/sqlite-android-3240000.aar")
    into "${project.rootDir}/app/src/main/jniLibs/"
    include "jni/*/*.so"

    eachFile { details ->
        details.setRelativePath new RelativePath(true, details.path - "jni/")
    }

    includeEmptyDirs = false
}

task unzip2(type: Copy) {
    from zipTree("${project.rootDir}/sqlite-android-3240000/sqlite-android-3240000.aar")
    into "${project.rootDir}/app/src/main/libs/"
    include "classes.jar"

    eachFile { details ->
        details.setRelativePath new RelativePath(true, "libsqliteX.jar")
    }
}
